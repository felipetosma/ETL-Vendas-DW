
-- CP4_DIMensão Cliente
CREATE TABLE CP4_DIM_CLIENTE (
    SK_CLIENTE NUMBER PRIMARY KEY,
    COD_CLIENTE NUMBER(10), -- Chave natural
    NOM_CLIENTE VARCHAR2(50),
    DES_RAZAO_SOCIAL VARCHAR2(80),
    TIP_PESSOA CHAR(1),
    NUM_CPF_CNPJ NUMBER(15),
    STA_ATIVO CHAR(1),
    DAT_INICIO DATE,
    DAT_FIM DATE,
    FL_CORRENTE CHAR(1) -- Flag indicando registro atual
);

-- CP4_DIMensão Vendas (Combinando Produto e Pedido)
CREATE TABLE CP4_DIM_VENDAS (
    SK_VENDAS NUMBER PRIMARY KEY,
    COD_PRODUTO NUMBER(10),  -- Chave natural do produto
    COD_PEDIDO NUMBER(10),   -- Chave natural do pedido
    NOM_PRODUTO VARCHAR2(20),
    COD_BARRA VARCHAR2(20),
    DAT_PEDIDO DATE,
    DAT_ENTREGA DATE,
    DAT_CANCELAMENTO DATE,
    STA_PEDIDO VARCHAR2(20),
    VAL_TOTAL_PEDIDO NUMBER(12,2),
    VAL_DESCONTO NUMBER(12,2),
    DAT_INICIO DATE,
    DAT_FIM DATE,
    FL_CORRENTE CHAR(1) -- Flag indicando registro atual
);

-- CP4_DIMensão Vendedor
CREATE TABLE CP4_DIM_VENDEDOR (
    SK_VENDEDOR NUMBER PRIMARY KEY,
    COD_VENDEDOR NUMBER(4), -- Chave natural
    NOM_VENDEDOR VARCHAR2(50),
    STA_ATIVO CHAR(1),
    DAT_INICIO DATE,
    DAT_FIM DATE,
    FL_CORRENTE CHAR(1) -- Flag indicando registro atual
);

-- CP4_DIMensão Tempo
CREATE TABLE CP4_DIM_TEMPO (
    SK_TEMPO NUMBER PRIMARY KEY,
    DATA DATE,
    DIA NUMBER(2),
    MES NUMBER(2),
    ANO NUMBER(4),
    TRIMESTRE NUMBER(1),
    SEMESTRE NUMBER(1),
    NOM_MES VARCHAR2(20),
    NOM_MES_ABREV VARCHAR2(3),
    NOM_TRIMESTRE VARCHAR2(20),
    NOM_SEMESTRE VARCHAR2(20),
    FL_FERIADO CHAR(1),
    FL_FIM_SEMANA CHAR(1),
    NUM_DIA_SEMANA NUMBER(1)
);

-- CP4_DIMensão Localização (a partir da hierarquia cidade-estado-país)
CREATE TABLE CP4_DIM_LOCALIZACAO (
    SK_LOCALIZACAO NUMBER PRIMARY KEY,
    COD_CIDADE NUMBER(6), -- Chave natural
    NOM_CIDADE VARCHAR2(20),
    COD_ESTADO CHAR(3),
    NOM_ESTADO VARCHAR2(50),
    COD_PAIS NUMBER(3),
    NOM_PAIS VARCHAR2(50),
    DAT_INICIO DATE,
    DAT_FIM DATE,
    FL_CORRENTE CHAR(1) -- Flag indicando registro atual
);

-- Tabela CP4_FATO Vendas (atualizada para usar a CP4_DIMensão Vendas)
CREATE TABLE CP4_FATO_VENDAS (
    SK_VENDA NUMBER PRIMARY KEY,
    SK_CLIENTE NUMBER,
    SK_VENDAS NUMBER,    -- Substituindo SK_PRODUTO por SK_VENDAS
    SK_VENDEDOR NUMBER,
    SK_TEMPO NUMBER,
    SK_LOCALIZACAO NUMBER,
    COD_PEDIDO NUMBER(10), -- Chave natural
    COD_ITEM_PEDIDO INTEGER,
    QTD_ITEM NUMBER(10),
    VAL_UNITARIO_ITEM NUMBER(12,2),
    VAL_DESCONTO_ITEM NUMBER(12,2),
    VAL_TOTAL_ITEM NUMBER(12,2),
    CONSTRAINT FK_CLIENTE FOREIGN KEY (SK_CLIENTE) REFERENCES CP4_DIM_CLIENTE(SK_CLIENTE),
    CONSTRAINT FK_VENDAS FOREIGN KEY (SK_VENDAS) REFERENCES CP4_DIM_VENDAS(SK_VENDAS),
    CONSTRAINT FK_VENDEDOR FOREIGN KEY (SK_VENDEDOR) REFERENCES CP4_DIM_VENDEDOR(SK_VENDEDOR),
    CONSTRAINT FK_TEMPO FOREIGN KEY (SK_TEMPO) REFERENCES CP4_DIM_TEMPO(SK_TEMPO),
    CONSTRAINT FK_LOCALIZACAO FOREIGN KEY (SK_LOCALIZACAO) REFERENCES CP4_DIM_LOCALIZACAO(SK_LOCALIZACAO)
);

-- Índices para melhorar o desempenho das consultas
CREATE INDEX IDX_CP4_FATO_CLIENTE ON CP4_FATO_VENDAS(SK_CLIENTE);
CREATE INDEX IDX_CP4_FATO_VENDAS ON CP4_FATO_VENDAS(SK_VENDAS);
CREATE INDEX IDX_CP4_FATO_VENDEDOR ON CP4_FATO_VENDAS(SK_VENDEDOR);
CREATE INDEX IDX_CP4_FATO_TEMPO ON CP4_FATO_VENDAS(SK_TEMPO);
CREATE INDEX IDX_CP4_FATO_LOCALIZACAO ON CP4_FATO_VENDAS(SK_LOCALIZACAO);
CREATE INDEX IDX_CP4_FATO_PEDIDO ON CP4_FATO_VENDAS(COD_PEDIDO);

-- Índices nas CP4_DIMensões para localização rápida pelo código natural
CREATE INDEX IDX_CP4_DIM_CLIENTE_COD ON CP4_DIM_CLIENTE(COD_CLIENTE, FL_CORRENTE);
CREATE INDEX IDX_CP4_DIM_VENDAS_COD ON CP4_DIM_VENDAS(COD_PRODUTO, COD_PEDIDO, FL_CORRENTE);
CREATE INDEX IDX_CP4_DIM_VENDEDOR_COD ON CP4_DIM_VENDEDOR(COD_VENDEDOR, FL_CORRENTE);
CREATE INDEX IDX_CP4_DIM_TEMPO_DATA ON CP4_DIM_TEMPO(DATA);
CREATE INDEX IDX_CP4_DIM_LOCALIZACAO_COD ON CP4_DIM_LOCALIZACAO(COD_CIDADE, FL_CORRENTE);


-- Criação das sequências para as chaves surrogate
CREATE SEQUENCE SEQ_SK_CLIENTE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SK_VENDAS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SK_VENDEDOR START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SK_TEMPO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SK_LOCALIZACAO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SK_VENDA START WITH 1 INCREMENT BY 1;
