-- 1. Total de vendas por produto por mês
SELECT 
    dv.NOM_PRODUTO,
    dt.ANO,
    dt.NOM_MES,
    SUM(fv.QTD_ITEM) AS TOTAL_ITENS,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_VENDAS dv ON fv.SK_VENDAS = dv.SK_VENDAS
JOIN CP4_DIM_TEMPO dt ON fv.SK_TEMPO = dt.SK_TEMPO
GROUP BY dv.NOM_PRODUTO, dt.ANO, dt.NOM_MES, dt.MES
ORDER BY dv.NOM_PRODUTO, dt.ANO, dt.MES;

-- 2. Desempenho de vendedores por trimestre
SELECT 
    dve.NOM_VENDEDOR,
    dt.ANO,
    dt.TRIMESTRE,
    dt.NOM_TRIMESTRE,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    SUM(fv.VAL_DESCONTO_ITEM) AS VALOR_DESCONTOS,
    ROUND(SUM(fv.VAL_DESCONTO_ITEM) / SUM(fv.VAL_TOTAL_ITEM + fv.VAL_DESCONTO_ITEM) * 100, 2) AS PERCENTUAL_DESCONTO
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_VENDEDOR dve ON fv.SK_VENDEDOR = dve.SK_VENDEDOR
JOIN CP4_DIM_TEMPO dt ON fv.SK_TEMPO = dt.SK_TEMPO
GROUP BY dve.NOM_VENDEDOR, dt.ANO, dt.TRIMESTRE, dt.NOM_TRIMESTRE
ORDER BY dt.ANO, dt.TRIMESTRE, VALOR_TOTAL DESC;

-- 3. Vendas por região geográfica
SELECT 
    dl.NOM_PAIS,
    dl.NOM_ESTADO,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    COUNT(fv.SK_VENDA) AS TOTAL_ITENS
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_LOCALIZACAO dl ON fv.SK_LOCALIZACAO = dl.SK_LOCALIZACAO
GROUP BY dl.NOM_PAIS, dl.NOM_ESTADO
ORDER BY VALOR_TOTAL DESC;

-- 4. Análise de vendas por tipo de cliente
SELECT 
    dc.TIP_PESSOA,
    CASE dc.TIP_PESSOA
        WHEN 'F' THEN 'Física'
        WHEN 'J' THEN 'Jurídica'
        ELSE 'Outros'
    END AS TIPO_PESSOA,
    dt.ANO,
    dt.SEMESTRE,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.QTD_ITEM) AS TOTAL_ITENS,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    ROUND(AVG(fv.VAL_TOTAL_ITEM), 2) AS VALOR_MEDIO_ITEM
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_CLIENTE dc ON fv.SK_CLIENTE = dc.SK_CLIENTE
JOIN CP4_DIM_TEMPO dt ON fv.SK_TEMPO = dt.SK_TEMPO
GROUP BY dc.TIP_PESSOA, dt.ANO, dt.SEMESTRE
ORDER BY dt.ANO, dt.SEMESTRE, VALOR_TOTAL DESC;

-- 5. Análise de sazonalidade de vendas
SELECT 
    dt.ANO,
    dt.MES,
    dt.NOM_MES,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.QTD_ITEM) AS TOTAL_ITENS,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    ROUND(SUM(fv.VAL_TOTAL_ITEM) / COUNT(DISTINCT fv.COD_PEDIDO), 2) AS TICKET_MEDIO
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_TEMPO dt ON fv.SK_TEMPO = dt.SK_TEMPO
GROUP BY dt.ANO, dt.MES, dt.NOM_MES
ORDER BY dt.ANO, dt.MES;

-- 6. Top 10 clientes em valor de compras
SELECT 
    dc.NOM_CLIENTE,
    dc.TIP_PESSOA,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.QTD_ITEM) AS TOTAL_ITENS,
    ROUND(SUM(fv.VAL_TOTAL_ITEM) / COUNT(DISTINCT fv.COD_PEDIDO), 2) AS TICKET_MEDIO
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_CLIENTE dc ON fv.SK_CLIENTE = dc.SK_CLIENTE
GROUP BY dc.NOM_CLIENTE, dc.TIP_PESSOA
ORDER BY VALOR_TOTAL DESC
FETCH FIRST 10 ROWS ONLY;

-- 7. Análise de descontos por status de pedido
SELECT 
    dv.STA_PEDIDO,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.VAL_UNITARIO_ITEM * fv.QTD_ITEM) AS VALOR_BRUTO,
    SUM(fv.VAL_DESCONTO_ITEM) AS VALOR_DESCONTO,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_LIQUIDO,
    ROUND(SUM(fv.VAL_DESCONTO_ITEM) / SUM(fv.VAL_UNITARIO_ITEM * fv.QTD_ITEM) * 100, 2) AS PERCENTUAL_DESCONTO
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_VENDAS dv ON fv.SK_VENDAS = dv.SK_VENDAS
GROUP BY dv.STA_PEDIDO
ORDER BY PERCENTUAL_DESCONTO DESC;

-- 8. Análise de vendas por dia da semana
SELECT 
    dt.NUM_DIA_SEMANA,
    CASE dt.NUM_DIA_SEMANA
        WHEN 1 THEN 'Domingo'
        WHEN 2 THEN 'Segunda'
        WHEN 3 THEN 'Terça'
        WHEN 4 THEN 'Quarta'
        WHEN 5 THEN 'Quinta'
        WHEN 6 THEN 'Sexta'
        WHEN 7 THEN 'Sábado'
    END AS DIA_SEMANA,
    dt.FL_FIM_SEMANA,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    ROUND(AVG(fv.VAL_TOTAL_ITEM), 2) AS VALOR_MEDIO_ITEM
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_TEMPO dt ON fv.SK_TEMPO = dt.SK_TEMPO
GROUP BY dt.NUM_DIA_SEMANA, dt.FL_FIM_SEMANA
ORDER BY dt.NUM_DIA_SEMANA;

-- 9. Relação entre data do pedido e data de entrega (análise específica da CP4_DIMensão Vendas)
SELECT 
    dt.ANO,
    dt.NOM_TRIMESTRE,
    AVG(TRUNC(dv.DAT_ENTREGA) - TRUNC(dv.DAT_PEDIDO)) AS MEDIA_DIAS_ENTREGA,
    MEDIAN(TRUNC(dv.DAT_ENTREGA) - TRUNC(dv.DAT_PEDIDO)) AS MEDIANA_DIAS_ENTREGA,
    MIN(TRUNC(dv.DAT_ENTREGA) - TRUNC(dv.DAT_PEDIDO)) AS MIN_DIAS_ENTREGA,
    MAX(TRUNC(dv.DAT_ENTREGA) - TRUNC(dv.DAT_PEDIDO)) AS MAX_DIAS_ENTREGA
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_VENDAS dv ON fv.SK_VENDAS = dv.SK_VENDAS
JOIN CP4_DIM_TEMPO dt ON fv.SK_TEMPO = dt.SK_TEMPO
WHERE dv.DAT_ENTREGA IS NOT NULL
GROUP BY dt.ANO, dt.NOM_TRIMESTRE, dt.TRIMESTRE
ORDER BY dt.ANO, dt.TRIMESTRE;

-- 10. Análise de vendas por faixas de desconto
SELECT 
    CASE 
        WHEN dv.VAL_DESCONTO = 0 THEN 'Sem Desconto'
        WHEN dv.VAL_DESCONTO / NULLIF(dv.VAL_TOTAL_PEDIDO + dv.VAL_DESCONTO, 0) * 100 <= 5 THEN 'Até 5%'
        WHEN dv.VAL_DESCONTO / NULLIF(dv.VAL_TOTAL_PEDIDO + dv.VAL_DESCONTO, 0) * 100 <= 10 THEN '5.1% a 10%'
        WHEN dv.VAL_DESCONTO / NULLIF(dv.VAL_TOTAL_PEDIDO + dv.VAL_DESCONTO, 0) * 100 <= 20 THEN '10.1% a 20%'
        ELSE 'Acima de 20%'
    END AS FAIXA_DESCONTO,
    COUNT(DISTINCT fv.COD_PEDIDO) AS TOTAL_PEDIDOS,
    SUM(fv.QTD_ITEM) AS TOTAL_ITENS,
    SUM(fv.VAL_TOTAL_ITEM) AS VALOR_TOTAL,
    ROUND(AVG(fv.VAL_TOTAL_ITEM), 2) AS VALOR_MEDIO_ITEM
FROM CP4_FATO_VENDAS fv
JOIN CP4_DIM_VENDAS dv ON fv.SK_VENDAS = dv.SK_VENDAS
GROUP BY 
    CASE 
        WHEN dv.VAL_DESCONTO = 0 THEN 'Sem Desconto'
        WHEN dv.VAL_DESCONTO / NULLIF(dv.VAL_TOTAL_PEDIDO + dv.VAL_DESCONTO, 0) * 100 <= 5 THEN 'Até 5%'
        WHEN dv.VAL_DESCONTO / NULLIF(dv.VAL_TOTAL_PEDIDO + dv.VAL_DESCONTO, 0) * 100 <= 10 THEN '5.1% a 10%'
        WHEN dv.VAL_DESCONTO / NULLIF(dv.VAL_TOTAL_PEDIDO + dv.VAL_DESCONTO, 0) * 100 <= 20 THEN '10.1% a 20%'
        ELSE 'Acima de 20%'
    END
ORDER BY VALOR_TOTAL DESC;